package swarm_manager 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type SwarmManager struct {

	/*Filters - Descr: Filters to use [health, port, dependency, affinity, constraint] Default: [health port dependency affinity constraint]
*/
	Filters interface{} `yaml:"filters,omitempty"`

	/*Heartbeat - Descr: Time in second between each heartbeat Default: 20s
*/
	Heartbeat interface{} `yaml:"heartbeat,omitempty"`

	/*Port - Descr: Listen port Default: 2375
*/
	Port interface{} `yaml:"port,omitempty"`

	/*Replication - Descr: Enable Swarm manager replication Default: false
*/
	Replication interface{} `yaml:"replication,omitempty"`

	/*ReplicationTtl - Descr: Leader lock release time on failure Default: 30s
*/
	ReplicationTtl interface{} `yaml:"replication_ttl,omitempty"`

	/*Advertise - Descr: Address of the Swarm Manager joining the cluster. Other Swarm Manager(s) MUST be able to reach the Swarm Manager at this address. Default: <nil>
*/
	Advertise interface{} `yaml:"advertise,omitempty"`

	/*Overcommit - Descr: Overcommit to apply on resources Default: 0.5
*/
	Overcommit interface{} `yaml:"overcommit,omitempty"`

	/*ApiEnableCors - Descr: Enable CORS headers in the remote API Default: false
*/
	ApiEnableCors interface{} `yaml:"api_enable_cors,omitempty"`

	/*LogLevel - Descr: Log level (options: debug, info, warn, error, fatal, panic) Default: info
*/
	LogLevel interface{} `yaml:"log_level,omitempty"`

	/*Debug - Descr: Enable debug mode Default: false
*/
	Debug interface{} `yaml:"debug,omitempty"`

	/*ListenAddress - Descr: Listen address Default: 0.0.0.0
*/
	ListenAddress interface{} `yaml:"listen_address,omitempty"`

	/*Strategy - Descr: Placement strategy to use [spread, binpack, random] Default: spread
*/
	Strategy interface{} `yaml:"strategy,omitempty"`

}